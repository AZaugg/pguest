#!/usr/bin/env python
# vi: ft=python

import argparse
import os
import requests
import sys
import time

# User data
global USERNAME
global PASSWORD


# Check google.com
def check_google():
    try:
        check_google = requests.get(
            'http://google.com/',
            timeout=10,
            verify=False,
        )

        if check_google.headers['server'] == 'gws':
            return 0

    except Exception, e:
        print "Exception doing google.com request: %s" % str(e)
        return 1

    return -1


# Attempt PGuest auth
def pguest_auth():
    try:
        print "Google server is not 'gws', attempting PGuest auth"

        pguest_form = {
            "username":      USERNAME,
            "password":      PASSWORD,
            "buttonClicked": 4,
            "err_flag":      0,
            "err_msg":       "",
            "info_flag":     0,
            "info_msg":      "",
            "redirect_url":  "",
        }

        pguest_attempt = requests.post(
            'https://1.1.1.1/login.html',
            data=pguest_form,
            timeout=10,
            verify=False,
        )

        if pguest_attempt.status_code == 200:
            return 0

        return -1

    except Exception, e:
        print "Exception doing PGuest authentication: %s" % str(e)
        return 1


if __name__ == "__main__":

    # Parse args
    parser = argparse.ArgumentParser(
        description="Check if google is accessable,"
            " else authenticate to PGuest",
    )
    parser.add_argument('-u', '--username',
        help='The username for authentication',
        default=None,
    )
    parser.add_argument('-p', '--password',
        help='The password for authentication',
        default=None,
    )
    parser.add_argument('-c', '--config',
        help='Path to username and password',
        default='~/.pguest',
    )
    args = parser.parse_args()

    USERNAME = None
    PASSWORD = None
    SOURCE = None

    if os.path.isfile(args.config):
        SOURCE = "file"
        try:
            with open(args.config) as f:
                for line in f:
                    name, var = line.partition("=")[::2]
                    if name.lower().strip() == "username":
                        USERNAME = var.strip()
                    elif name.lower().strip() == "password":
                        PASSWORD = var.strip()
        except IOError:
            print "IOError on reading config file %s" % args.config
            exit(1)
    else:
        SOURCE = "args"
        USERNAME = args.username
        PASSWORD = args.password

    if (USERNAME is None) or (PASSWORD is None):
        sys.stdout.write("Incomplete credentials specified by %s" % SOURCE)
        if SOURCE == "file":
            print ": %s" % args.config
        else:
            print ""
        exit(1)

    while True:
        google_result = check_google()
        if google_result == -1:
            print ""    # Adds \n to series of \u2713 (tick) characters
            pguest_result = pguest_auth()
            if pguest_result == -1:
                print "PGuest didn't like the POST"
            elif pguest_result == 0:
                sys.stdout.write("PGuest auth returned 200")
                for i in range(0, 5):
                    time.sleep(1)
                    sys.stdout.write(".")
                    sys.stdout.flush()
                if check_google() == -1:
                    print " but still can't access google.com"
                    continue
                else:
                    print ""
        elif google_result == 0:
            sys.stdout.write(u'\u2713 ')
            sys.stdout.flush()

        time.sleep(20)
